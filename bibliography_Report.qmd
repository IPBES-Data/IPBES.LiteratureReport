---
title: "Bibliography Report"
format:
    html:
        toc: true
        toc-depth: 5
        embed-resources: true
        code-fold: true
        code-summary: "Show the code"
        # grid:
        #     sidebar-width: 0px
        #     body-width: 4000px
        #     margin-width: 200px
        #     gutter-width: 1.5rem    
params:
    bib_name: "IPBES_NFF_4937409"
    targets_store: "/Users/rainerkrug/Documents_Local/git/IPBES_data_tsu/Diverse/IPBES.LiteratureReport/_targets"
---

```{r}
#| label: setup
#| include: false
#|
if (!(exists("params"))) {
  params <- rmarkdown::yaml_front_matter("./bibliography_report.qmd")$params
}

# Make sure that one sees the progress messages when rendering this document
knitr::opts_chunk$set(message = NA)

suppressPackageStartupMessages({
  library(IPBES.R)
  library(dplyr)
  library(targets)
})

bib_data <- targets::tar_read_raw(
  name = paste0("combined_data", "_", params$bib_name),
  store = params$targets_store
)

# cat(file.path(".", "_targets") |>
#   normalizePath())

# suppressWarnings({
# })
```


- [`r bib_data$bibliography$name` Bibliography](`r bib_data$bibliography$url`){target="_blank"}
- [This Report](`r paste0("https://ipbes-data.github.io/IPBES.LiteratureReport/output/IPBES.", bib_data$bibliography$name, ".bibliography_report.html")`){target="_blank"}
- [Github repository](https://github.com/IPBES-Data/IPBES.LiteratureReport/tree/main)

# Introduction

This report assesses the [`r bib_data$bibliography$name` Bibliography](`r bib_data$bibliography$url`){target="_blank"} in regards to different measures and shows some information of the content. It does **not** assess the content of the sources but rather the bibliometric data.

# Cleanliness of the Bibliography

Cleanliness of a bibliography is defined here as the quality of the bibliografic data in the bibliography. It does not concern any topical measures, only measures related to the bibliografic data in the bibliography.

The analysis is at the moment only done for DOIs as corresponding measures are not available at the moment for ISBNs and ISSNs and duplicate ISBNs and ISSNs can be rcorrect as different chapters of a book might be in the bibliography.

## Entries with DOIs, ISBNs or ISSNs in Zotero

To identify a reference, the most widely used identifier is the DOI. The following table shows the number of references with a DOI and the number of unique DOIs.

To consider duplicate ISBNs or ISSNs as duplicates entries in the library is not waranted as e.g. differenc chapters of a book can be separate entries in the library and therefore lead to duplicates. 


- **DOIs**: `r bib_data$metrics$zotero_dois$count` (`r round(bib_data$metrics$zotero_dois$pc, digits = 2)`%) - `r length(bib_data$metrics$zotero_dois$duplicate)` duplicates
- **ISBNss**: `r bib_data$metrics$zotero_isbns$count` (`r round(bib_data$metrics$zotero_isbns$pc, digits = 2)`%)
- **ISBNss**: `r bib_data$metrics$zotero_issn$count` (`r round(bib_data$metrics$zotero_issns$pc, digits = 2)`%)

## DOIs in Zotero

The following sections provide some more detailed analysis of the bibliography in Zenodo. The tables all contain clickable links which, shwen clicked, show the respective article in the Zotero bibliograpohy.

### Duplicates

The following DOIs are duplicates in the bibliography. This table should be empty.

```{r}
#| label: duplicates

if (length(bib_data$metrics$zotero_dois$duplicate) > 0) {
  data.frame(
    doi = bib_data$metrics$zotero_dois$duplicate,
    link = paste0(bib_data$bibliography$url, "/items/", names(bib_data$metrics$zotero_dois$duplicate))
  ) |>
    dplyr::mutate(
      sort = doi,
      doi = paste0('<a href="', link, '" target="_blank">', doi, "</a>"),
    ) |>
    dplyr::arrange(
      sort
    ) |>
    dplyr::mutate(
      sort = NULL
    ) |>
    knitr::kable(
      caption = "DOIs in Zenodo which are duplicated",
      escape = FALSE
    )
}
```

### Non Standard

All DOIs should be given as only the DOI without the resolver, i.e. not starting with `http`. The following table shows all entries which do have a non-conform DOI: 

```{r}
#| label: dois_non_standard
#|

http <- grep("http", bib_data$metrics$zotero_dois$id_raw)
data.frame(
  doi = bib_data$metrics$zotero_dois$id_raw[http],
  link = paste0(bib_data$bibliography$url, "/items/", names(bib_data$metrics$zotero_dois$id_raw)[http])
) |>
  dplyr::mutate(
    doi = paste0('<a href="', link, '" target="_blank">', doi, "</a>"),
    link = NULL
  ) |>
  knitr::kable(
    caption = "DOIs in Zenodo which include a `http`",
    escape = FALSE
  )
```

### Not Valid

Here we do acheck for the structural validity of the dois. This check needs to be improved.
Of these `r (length(bib_data$metrics$zotero_dois$not_in_oa) - length(bib_data$metrics$zotero_dois$dois_valid))` are not valid. These are:


```{r}
#| label: dois_not_valid
#|

if (length(bib_data$metrics$zotero_dois$not_valid) > 0) {
  data.frame(
    doi = bib_data$metrics$zotero_dois$not_valid,
    link = paste0(bib_data$bibliography$url, "/items/", names(bib_data$metrics$zotero_dois$not_valid))
  ) |>
    dplyr::mutate(
      doi = paste0('<a href="', link, '" target="_blank">', doi, "</a>"),
      link = NULL
    ) |>
    knitr::kable(
      caption = "DOIs in Zenodo which ar not valid",
      escape = FALSE
    )
} else {
  print("All DOIs in Zenodo are valid.")
}
```


### Not in [OpenAlex](https://OpenAlex.org){target="_blank"}

To validate the existence and validity of the DOIs, we check if the DOIs are in the [OpenAlex](https://OpenAlex.org){target="_blank"} database. 

Of the `r length(bib_data$metrics$zotero_dois$unique)` unique DOIs in the library, `r length(bib_data$metrics$zotero_dois$not_in_oa)` (`r round(100 * length(bib_data$metrics$zotero_dois$not_in_oa) / bib_data$metrics$zotero_dois$count, digits = 2)`%) are in not in [OpenAlex](https://OpenAlex.org){target="_blank"}. This includes the non-valid DOIS, which are filtered out in the table below.


```{r}
#| label: dois_not_in_openalex

data.frame(
  doi = bib_data$metrics$zotero_dois$not_in_oa,
  link = paste0(bib_data$bibliography$url, "/items/", names(bib_data$metrics$zotero_dois$not_in_oa))
) |>
  dplyr::mutate(
    doi = paste0('<a href="', link, '" target="_blank">', doi, "</a>"),
    link = NULL
  ) |>
  knitr::kable(
    caption = "DOIs in Zenodo which ar not in [OpenAlex](https://OpenAlex.org){target='_blank'}",
    escape = FALSE
  )
```

### TODO Do Exist

TODO Finally we check, if these dois exist but are not ingested into OpenAlex. This is done using the `doi.org` resolver
This is disabled at the moment and still needs to be implemented.

```{r}
#| label: dois_exist
#| eval: false


```

# Bibliographic analysis

In most cases, the bibliographic analysis is done on the [OpenAlex](https://OpenAlex.org){target="_blank"} library. In some cases, we can also do it using the Zenodo data. This is mentioned in the beginning of each subsection

## Publication types

**Analysis: Zenodo and OpenAlex**

OpenAlex and Zotero use different tyoes. These are not directly compable, which is whu=y both are shown.

```{r}
#| label: publication_types_data

bib_data$figure_types_data |>
  dplyr::arrange(
    from,
    desc(count)
  ) |>
  knitr::kable(
    caption = "Types of documents from the Zotero bibliography as well as from OpenApex."
  )
```

```{r}
#| label: publication_types_figure
bib_data$figure_types
```

### Zenodo versus [OpenAlex](https://OpenAlex.org){target="_blank"} Types

**Analysis: Zenodo and OpenAlex**

The types entered in the Zenodo library and the types as retrieved from [OpenAlex](https://OpenAlex.org){target="_blank"} are not linked, therefore they can differ. This can indicate faulty data entering in Zenodo but not necessarily has to. These cases need to be carefully evaluated and here only given as a starting point.

`NA` in [OpenAlex](https://OpenAlex.org){target="_blank"} is likely caused by the doi not found in [OpenAlex](https://OpenAlex.org){target="_blank"} (not in there, not valid, non-standard DOI in Zenodo). `NA` in Zotero is linked to non-standard DOI entries (i.e. with `http`) which can therefore not be linked to [OpenAlex](https://OpenAlex.org){target="_blank"} data. If all DOIs are in standard format, there should be no NAs in this Table in the column Ferom Zenodo.

**TODO: Improvements should be done after feedback.**

```{r}
bib_data$metrics$types$comparison |>
  knitr::kable(
    col.names = c("Type from Zenodo", "Type from [OpenAlex](https://OpenAlex.org){target='_blank'}", "count"),
    caption = "Table giving the combination of types from Zenodo as well as [OpenAlex](https://OpenAlex.org){target='_blank'} and their frequency"
  )
```


## Year of Publication

**Analysis: Zenodo and OpenAlex**

The following ranges of publication years can be found in the data.

```{r}
bib_data$figure_pub_year_data |>
  dplyr::summarize(
    min = min(publication_year, na.rm = TRUE),
    max = max(publication_year, na.rm = TRUE),
    .by = c(from)
  ) |>
  knitr::kable()
```

```{r}
#| label: publication_years_figure
#| fig-height: 10
#| fig-width: 10

bib_data$figure_pub_year
```

## Access Status of References

**Analysis: OpenAlex**

```{r}
#| label: oa_status_figure
#| fig-height: 10
#| fig-width: 10

bib_data$figure_oa_status
```

## 50 Most often cited Journals

**Analysis: Zenodo**

**TODO: OpenAlex should be added**

```{r}
#| label: top_journals_figure
#| fig-height: 10
#| fig-width: 10

bib_data$figure_top_journals
```

This table contains all Journals as specified in the Zotero database. 
```{r}
#| label: top_journals_data

bib_data$figure_top_journals_data |>
  IPBES.R::table_dt("cited_journals")
```

## Coutries of Institutes of all authors

**Analysis: OpenAlex**

In this section we will take a closer look at the countries from which ih the authors ot the publication come. THe data includes all authoirs without weighting.


```{r}
#| label: top_countries_map
#|
#| fig-height: 10
#| fig-width: 10

bib_data$figure_top_country_map
```

This plot only contains the countries with more than 10 references.

```{r}
#| label: top_countries
#|
#| fig-height: 10
#| fig-width: 10

bib_data$figure_top_country
```

This table contains all countries and the number of authorship.

```{r}
#| label: top_countries_data

bib_data$figure_top_country_data |>
  IPBES.R::table_dt("top_countries")
```
