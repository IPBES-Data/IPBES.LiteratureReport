---
title: "Quality report of the IPBES IAS bibliography"
format:
    html:
        toc: true
        toc-depth: 2
        embed-resources: true
        code-fold: true
        code-summary: "Show the code"
        # grid:
        #     sidebar-width: 0px
        #     body-width: 4000px
        #     margin-width: 200px
        #     gutter-width: 1.5rem    
params:
    bib_name: "IPBES.GA1"
---

# Bibplography `r params$branch`

# Bibliography Setup
The bibliography is loaded and the DOIs, ISBNs and ISSNs are extracted.

```{r}
#| label: setup
#| include: false
#|
if (!(exists("params"))) {
    params <- rmarkdown::yaml_front_matter("./bibliography_report.qmd")$params
}

# Make sure that one sees the progress messages when rendering this document
knitr::opts_chunk$set(message = NA)

suppressPackageStartupMessages({
    library(IPBES.R)
    library(dplyr)
    library(targets)
})

cat(file.path(".", "_targets") |>
    normalizePath())

suppressWarnings({
    bibliography <- targets::tar_read_raw(paste0("bibliography_", params$bib_name))
    metrics <- targets::tar_read_raw(paste0("metrics_", params$bib_name))
    figure_pub_year <- targets::tar_read_raw(paste0("figure_pub_year_", params$bib_name))
    figure_oa_status <- targets::tar_read_raw(paste0("figure_oa_status_", params$bib_name))
    figure_top_journ_data <- targets::tar_read_raw(paste0("figure_top_journals_data_", params$bib_name))
    figure_top_journals <- targets::tar_read_raw(paste0("figure_top_journals_", params$bib_name))
    figure_top_country_data <- targets::tar_read_raw(paste0("figure_top_country_data_", params$bib_name))
    figure_top_country <- targets::tar_read_raw(paste0("figure_top_country_", params$bib_name))
})
```

# Introduction

This report assesses the following in regards to the provided bibliography named ``r bibliography$name``:

- [ ] "cleanliness" of bibliography, regarding DOIs, 
    - [x] number of DOIs
    - [x] duplicates
    - [x] Syntactically valid
    - [ ] existing
    - [ ] retracted
    - [ ] ...
- [ ] other identifiers by proportion
- [ ] geographic distribution by institute
- [x] Open access status
- [x] statistics about the most cited journals, publication dates, ...
- [ ] VOSViewer based visualisations
- [ ] OpenAlex topics
- [x] year of publication
- [ ] ...

- [ ] Download works by ISBN and ISSN

Remarks: 
- Group ID is in the json, but not in the csv. The group ID makes it possible to directly jump to the reference in the Zotero Library online.




# Data Quality of the Bibliography

## Cleanliness of bibliography

One measure of the cleanliness of a Bibliography is assessed by checking the number of references that have a DOI. The following table gives an overview over some numbers regarding the DOIs, ISBNs and ISSNs in the bibliography.

### Entries with DOIs, ISBNs or ISSNs

To identify a reference, the most widely used identifier is the DOI. The following table shows the number of references with a DOI and the number of unique DOIs.

To consider duplicate ISBNs or ISSNs as duplicates entries in the library is not waranted as e.g. differenc chapters of a book can be separate entries in the library and therefore lead toi duplicates. 

- **DOIs**: `r metrics$dois_count` (`r metrics$dois_pc`%) - `r metrics$dois_duplicates` duplicates
- **ISBNss**: `r metrics$isbns_count` (`r metrics$isbns_pc`%) - `r metrics$isbns_duplicates` duplicates
- **ISBNss**: `r metrics$issns_count` (`r metrics$issns_pc`%) - `r metrics$issns_duplicates` duplicates


The following DOIs are duplicates in the bibliography. This table should be empty.
```{r}
#| label: duplicates
#|
if (sum(duplicated(bibliography$dois)) > 0) {
    data <- data.frame(
        Type = "doi",
        Identifier = sprintf('<a href="https://doi.org/%s" target="_blank">%s</a>', bibliography$dois[duplicated(bibliography$dois)], bibliography$dois[duplicated(bibliography$dois)])
    )
} else {
    data <- data.frame(
        Type = "doi",
        Identifier = NA
    )
}

data |>
    knitr::kable(
        caption = "Duplicate DOIs in the Bibliography",
        escape = FALSE
    )
rm(data)
```



### DOIs in Open Alex

To validate the existence and validity of the DOIs, we check if the DOIs are in the OpenAlex database. 

Of the `r metrics$dois_unique` unique DOIs in the library, `r length(metrics$dois_not_in_oa)` (`r 100 * length(metrics$dois_not_in_oa) / length(unique(bibliography$dois))`%) are in not in OpenAlex. 

```{r}
#| label: dois_not_in_oa_table
data.frame(
    Type = "doi",
    Identifier = sprintf('<a href="https://doi.org/%s" target="_blank">%s</a>', metrics$dois_not_in_oa, metrics$dois_not_in_oa)
) |>
    IPBES.R::table_dt(caption = "dois_not_in_oa")
```

Of these `r (length(metrics$dois_not_in_oa) - length(metrics$dois_valid))` are not valid. These are:

```{r}
#| label: dois_not_valid

data.frame(
    Type = "doi",
    Identifier = sprintf('<a href="https://doi.org/%s" target="_blank">%s</a>', metrics$dois_not_in_oa[!(metrics$dois_not_in_oa %in% metrics$dois_valid)], metrics$dois_not_in_oa[!(metrics$dois_not_in_oa %in% metrics$dois_valid)])
) |>
    knitr::kable(
        caption = "Non Valid DOIs in the Bibliography",
        escape = FALSE
    )
```


TODO Finally we check, if these dois exist but are not ingested into OpanAlex. This is done using the `doi.org` resolver
This is disabled at the moment.


```{r}
#| label: quality
#| eval: false

to_check <- bibliography$dois[!(bibliography$dois %in% dois_works)]

dois_valid <- IPBES.R::doi_valid(bibliography$dois)
dois_openalex <- bibliography$dois %in% dois_works
names(dois_openalex) <- bibliography$dois

dois_exist <- IPBES.R::doi_exists(to_check, cache_file = file.path(".", "cache", "doi_exist.rds"))
dois_not_retracted <- IPBES.R::doi_not_retracted(bibliography$dois, cache_file = file.path(".", "cache", "doi_not_retracted.rds"))

sprintf(
    fmt = paste(
        "Number of references: \t\t %d",
        "Number of DOIs: \t\t %d",
        "Number of Duplicate DOIs: \t %d",
        "Number of DOIs in OpenAlex: \t %d ( %f %)",
        "Number of Existing DOIs: \t %d",
        "Number of Retracted DOIs: \t %d",
        "Percentage of Duplicate DOIs: \t %f",
        sep = "\n"
    ),
    nrow(bibliography),
    sum(!is.na(bibliography$dois)),
    length(bibliography$dois) - length(unique((bibliography$dois))),
    sum(dois_openalex), 100 * sum(dois_openalex) / nrow(bibliography),
    sum(dois_exist),
    sum(!dois_not_retracted),
    ((dois_valid |> unique() |> length()) / length(dois_valid)) |> round(digits = 3) * 100
) |> cat()
```

```{r}
#| label: summary_dois
#| eval: false

oldopts <- options(knitr.kable.NA = "")
data.frame(
    metrics = c(
        "# References",
        "**DOI**",
        "# DOIs",
        "# Duplicate DOIs",
        "# Existing DOIs",
        "# Retracted DOIs",
        "% Duplicate DOIs",
        "**ISBN**",
        "# ISBNs",
        "# Duplicate ISBNs",
        "**ISSN**",
        "# ISSNs",
        "# Duplicate ISSNs"
    ),
    Value = c(
        nrow(bibliography),
        NA,
        sum(!is.na(bibliography$dois)),
        length(bibliography$dois) - length(unique((bibliography$dois))),
        sum(dois_exist),
        sum(!dois_not_retracted),
        ((dois_valid |> unique() |> length()) / length(dois_valid)) |> round(digits = 3) * 100,
        NA,
        sum(!is.na(bibliography$isbns)),
        length(bibliography$isbns) - length(unique((bibliography$isbns))),
        NA,
        sum(!is.na(bibliography$issns)),
        length(bibliography$issns) - length(unique((bibliography$issns)))
    )
) |>
    knitr::kable(
        caption = "Cleanliness of the Bibliography",
    )
options(oldopts)
```

# Contentual and Bibliographic analysis

## Publication types

```{r}
#| label: publication_types

bibliography$bibliography |>
    dplyr::group_by(
        Item.Type
    ) |>
    dplyr::summarize(
        count = n()
    ) |>
    dplyr::arrange(
        desc(count)
    ) |>
    knitr::kable()
```


## Year of Publication

```{r}
#| label: publication_years_figure
#| fig-height: 10
#| fig-width: 10

params$figure_pub_year
```

## Access Status of References

This is checked by using the OpenAlex retrieved works. Therefore it is li=mited to the works that are on OpenAlex. At the moment, only references with a DOI were retrieved from OpenAlex.

```{r}
#| label: oa_status_figure
#| fig-height: 10
#| fig-width: 10

params$figure_oa_status
```

## 50 Most often cited Journals
    
```{r}
#| label: top_journals_figure
#| fig-height: 10
#| fig-width: 10

params$figure_top_journals
```

This table contains all Journals as specified in the Zotero database. 
```{r}
#| label: top_journals_data

params$figure_top_journals_data |>
    IPBES.R::table_dt("cited_journals")
```

## TODO Coutries of Institutes of all authors

This plot only contains the countries with more than 10 references.

```{r}
#| label: top_countries
#| eval: false
#|
#| fig-height: 10
#| fig-width: 10

params$figure_top_countries
```

This table contains all countries and the number of authorship.

```{r}
#| label: top_countries_data

params$figure_top_country_data |>
    IPBES.R::table_dt("top_countries")
```
